# https://moonrepo.dev/docs/config/project
# yaml-language-server: $schema=https://moonrepo.dev/schemas/project.json
$schema: 'https://moonrepo.dev/schemas/project.json'

type: application
language: typescript
toolchain:
    node:
        version: '23'
stack: frontend
tags: ['app']

# Overrides the name (identifier) of the project
id: 'erp'

project:
    name: 'raizora dashboard'
    description: 'raizord erp dashboard'

env:
    APP_PREFIX: "$(jq -r .name <$workspaceRoot'/package.json')"
    APP_VERSION: "$(jq -r .version <$workspaceRoot'/package.json')"
    IMAGE_NAME: '$APP_PREFIX-$project'
    PORT: '3200'

# Since this project can infer task from script (package.json), then you can run any script as moon task.
# @see: https://moonrepo.dev/api/types/interface/NodeConfig#inferTasksFromScripts
# Example: `moon nextjs-app:start`
tasks:
    dev:
        command: 'pnpm run dev'
        options:
            runDepsInParallel: false
            envFile: '/.env'
            cache: false

    build:
        command: 'pnpm run build'
        options:
            runDepsInParallel: false
            envFile: '/.env'
            cache: true

    start-node:
        env:
            NODE_ENV: 'production'
        command: 'node --no-warnings dist/server.js'
        deps: ['build-standalone']
        options:
            runDepsInParallel: false
            envFile: '/.env'
            cache: true

    build-standalone:
        command: >
            rm -fr $projectRoot/dist
            && mkdir -p $projectRoot/dist/{.next,public}
            && cp -r .next/standalone/apps/nextjs-app/ dist
            && cp -r .next/static dist/.next/static
            && cp -r public/* dist/public/
        deps: ['build']
        options:
            runDepsInParallel: false
            envFile: '/.env'
            cache: true

    docker-run:
        command: 'docker run --network=host --rm -it --env-file .env --name $IMAGE_NAME $IMAGE_NAME:$APP_VERSION'
        options:
            mergeEnv: replace
            runFromWorkspaceRoot: true
            interactive: false
            outputStyle: buffer-only-failure
            runInCI: false
            cache: false
            shell: true

    docker-shell:
        command: 'docker run --network=host --rm -it --env-file .env --entrypoint /bin/sh $IMAGE_NAME:$APP_VERSION'
        options:
            mergeEnv: replace
            runFromWorkspaceRoot: true
            interactive: false
            outputStyle: buffer-only-failure
            runInCI: false
            cache: false
            shell: true
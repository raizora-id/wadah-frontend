{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "homepage": "https://www.kibo-ui.com/theme-switcher",
  "name": "theme-switcher",
  "type": "registry:ui",
  "author": "Hayden Bleasel <hello@haydenbleasel.com>",
  "registryDependencies": [],
  "dependencies": [
    "@radix-ui/react-use-controllable-state",
    "lucide-react",
    "motion",
    "react-fast-marquee"
  ],
  "devDependencies": [],
  "files": [
    {
      "type": "registry:ui",
      "path": "index.tsx",
      "content": "'use client';\n\nimport { cn } from '@/lib/utils';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Monitor, Moon, Sun } from 'lucide-react';\nimport { motion } from 'motion/react';\nimport { useEffect, useState } from 'react';\n\nconst themes = [\n  {\n    key: 'system',\n    icon: Monitor,\n    label: 'System theme',\n  },\n  {\n    key: 'light',\n    icon: Sun,\n    label: 'Light theme',\n  },\n  {\n    key: 'dark',\n    icon: Moon,\n    label: 'Dark theme',\n  },\n];\n\nexport type ThemeSwitcherProps = {\n  value?: 'light' | 'dark' | 'system';\n  onChange?: (theme: 'light' | 'dark' | 'system') => void;\n  defaultValue?: 'light' | 'dark' | 'system';\n  className?: string;\n};\n\nexport const ThemeSwitcher = ({\n  value,\n  onChange,\n  defaultValue,\n  className,\n}: ThemeSwitcherProps) => {\n  const [theme, setTheme] = useControllableState({\n    defaultProp: defaultValue,\n    prop: value,\n    onChange,\n  });\n  const [mounted, setMounted] = useState(false);\n\n  // Prevent hydration mismatch\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        'relative flex h-8 rounded-full bg-background p-1 ring-1 ring-border',\n        className\n      )}\n    >\n      {themes.map(({ key, icon: Icon, label }) => {\n        const isActive = theme === key;\n\n        return (\n          <button\n            type=\"button\"\n            key={key}\n            className=\"relative h-6 w-6 rounded-full\"\n            onClick={() => setTheme(key as 'light' | 'dark' | 'system')}\n            aria-label={label}\n          >\n            {isActive && (\n              <motion.div\n                layoutId=\"activeTheme\"\n                className=\"absolute inset-0 rounded-full bg-secondary\"\n                transition={{ type: 'spring', duration: 0.5 }}\n              />\n            )}\n            <Icon\n              className={cn(\n                'relative m-auto h-4 w-4',\n                isActive ? 'text-foreground' : 'text-muted-foreground'\n              )}\n            />\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n",
      "target": "components/ui/kibo-ui/theme-switcher/index.tsx"
    }
  ]
}